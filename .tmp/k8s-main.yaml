---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-controller-objects-metadata
  namespace: test

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: test
  name: k8s-controller-objects-metadata
rules:
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-controller-objects-metadata
  namespace: test
subjects:
- kind: ServiceAccount
  name: k8s-controller-objects-metadata
  namespace: test
roleRef:
  kind: ClusterRole
  name: k8s-controller-objects-metadata
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-controller-objects-metadata
  namespace: test
data:
  STRICT_NAMESPACE_MAPPING: frontend.develop.example.com:develop,frontend.staging.example.com:staging  # no special chars and spaces

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-controller-objects-metadata
  namespace: test
spec:
  selector:
    matchLabels:
      app: k8s-controller-objects-metadata
  replicas: 1
  template:
    metadata:
      labels:
        app: k8s-controller-objects-metadata
    spec:
      serviceAccountName: k8s-controller-objects-metadata
      containers:
      - name: k8s-controller-objects-metadata
        image: vfabi/k8s-controller-objects-metadata:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: k8s-controller-objects-metadata

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-controller-objects-metadata
  namespace: test
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  selector:
    app: k8s-controller-objects-metadata